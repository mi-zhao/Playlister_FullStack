{"ast":null,"code":"var _jsxFileName = \"/Users/michelle/Projects/Playlister_HW3/client/src/components/SongCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { GlobalStoreActionType, GlobalStoreContext } from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongCard(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const {\n    song,\n    index\n  } = props;\n  let cardClass = \"list-card unselected-list-card\";\n  const state = {\n    dragfrom: \"\",\n    dragto: \"\"\n  };\n\n  function handleDeleteSong() {\n    store.showDeleteSongModal(index);\n  }\n\n  function handleDoubleClick() {\n    store.showEditSongModal(index);\n  }\n\n  function handleDragStart(event) {\n    // Started dragging\n    event.dataTransfer.setData(\"song\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    // Dragging over song\n    event.preventDefault();\n  }\n\n  function handleDragLeave(event) {\n    // Leaving song\n    event.preventDefault();\n  }\n\n  function handleDragEnd(event) {\n    // Dropped dragging\n    event.preventDefault();\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"song\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    store.moveSong(sourceId, targetId);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'song-' + index + '-card',\n    className: cardClass,\n    onDoubleClick: handleDoubleClick,\n    onDragStart: handleDragStart,\n    onDragEnd: handleDragEnd,\n    onDragOver: handleDragOver,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    draggable: true,\n    children: [index + 1, \".\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n      id: 'song-' + index + '-link',\n      className: \"song-link\",\n      href: \"https://www.youtube.com/watch?v=\" + song.youTubeId,\n      children: [song.title, \" by \", song.artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"remove-song-\" + index,\n      className: \"list-card-button\",\n      onClick: handleDeleteSong,\n      value: \"\\u2715\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongCard, \"73C7T2gc7osE0gOE4ApLm9/B7dk=\");\n\n_c = SongCard;\nexport default SongCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"names":["React","useContext","useState","GlobalStoreActionType","GlobalStoreContext","SongCard","props","store","song","index","cardClass","state","dragfrom","dragto","handleDeleteSong","showDeleteSongModal","handleDoubleClick","showEditSongModal","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragLeave","handleDragEnd","handleDrop","targetId","substring","indexOf","sourceId","getData","moveSong","youTubeId","title","artist"],"sources":["/Users/michelle/Projects/Playlister_HW3/client/src/components/SongCard.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\nimport { GlobalStoreActionType, GlobalStoreContext } from '../store'\n\nfunction SongCard(props) {\n    const { store } = useContext(GlobalStoreContext);\n\n    const { song, index } = props;\n    let cardClass = \"list-card unselected-list-card\";\n\n    const state = {\n        dragfrom: \"\",\n        dragto: \"\"\n    }\n\n    function handleDeleteSong() {\n        store.showDeleteSongModal(index);\n    }\n\n    function handleDoubleClick() {\n        store.showEditSongModal(index);\n    }\n\n    function handleDragStart(event) {\n        // Started dragging\n        event.dataTransfer.setData(\"song\", event.target.id);\n    }\n\n    function handleDragOver(event) {\n        // Dragging over song\n        event.preventDefault();\n    }\n\n    function handleDragLeave(event) {\n        // Leaving song\n        event.preventDefault();\n        \n    }\n\n    function handleDragEnd(event) {\n        // Dropped dragging\n        event.preventDefault();\n    }\n\n    function handleDrop(event) {\n        event.preventDefault();\n        let target = event.target;\n        let targetId = target.id;\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n        let sourceId = event.dataTransfer.getData(\"song\");\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n\n        store.moveSong(sourceId, targetId);\n    }\n\n    return (\n        <div\n            key={index}\n            id={'song-' + index + '-card'}\n            className={cardClass}\n            onDoubleClick={handleDoubleClick}\n            onDragStart={handleDragStart}\n            onDragEnd={handleDragEnd}\n            onDragOver={handleDragOver}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n            draggable={true}\n        >\n            {index + 1}.{\" \"}\n            <a\n                id={'song-' + index + '-link'}\n                className=\"song-link\"\n                href={\"https://www.youtube.com/watch?v=\" + song.youTubeId}>\n                {song.title} by {song.artist}\n            </a>\n            <input\n                type=\"button\"\n                id={\"remove-song-\" + index}\n                className=\"list-card-button\"\n                onClick={handleDeleteSong}\n                value={\"\\u2715\"}\n            />\n        </div>\n    );\n}\n\nexport default SongCard;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,UAA1D;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAYN,UAAU,CAACG,kBAAD,CAA5B;EAEA,MAAM;IAAEI,IAAF;IAAQC;EAAR,IAAkBH,KAAxB;EACA,IAAII,SAAS,GAAG,gCAAhB;EAEA,MAAMC,KAAK,GAAG;IACVC,QAAQ,EAAE,EADA;IAEVC,MAAM,EAAE;EAFE,CAAd;;EAKA,SAASC,gBAAT,GAA4B;IACxBP,KAAK,CAACQ,mBAAN,CAA0BN,KAA1B;EACH;;EAED,SAASO,iBAAT,GAA6B;IACzBT,KAAK,CAACU,iBAAN,CAAwBR,KAAxB;EACH;;EAED,SAASS,eAAT,CAAyBC,KAAzB,EAAgC;IAC5B;IACAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2B,MAA3B,EAAmCF,KAAK,CAACG,MAAN,CAAaC,EAAhD;EACH;;EAED,SAASC,cAAT,CAAwBL,KAAxB,EAA+B;IAC3B;IACAA,KAAK,CAACM,cAAN;EACH;;EAED,SAASC,eAAT,CAAyBP,KAAzB,EAAgC;IAC5B;IACAA,KAAK,CAACM,cAAN;EAEH;;EAED,SAASE,aAAT,CAAuBR,KAAvB,EAA8B;IAC1B;IACAA,KAAK,CAACM,cAAN;EACH;;EAED,SAASG,UAAT,CAAoBT,KAApB,EAA2B;IACvBA,KAAK,CAACM,cAAN;IACA,IAAIH,MAAM,GAAGH,KAAK,CAACG,MAAnB;IACA,IAAIO,QAAQ,GAAGP,MAAM,CAACC,EAAtB;IACAM,QAAQ,GAAGA,QAAQ,CAACC,SAAT,CAAmBR,MAAM,CAACC,EAAP,CAAUQ,OAAV,CAAkB,GAAlB,IAAyB,CAA5C,CAAX;IACA,IAAIC,QAAQ,GAAGb,KAAK,CAACC,YAAN,CAAmBa,OAAnB,CAA2B,MAA3B,CAAf;IACAD,QAAQ,GAAGA,QAAQ,CAACF,SAAT,CAAmBE,QAAQ,CAACD,OAAT,CAAiB,GAAjB,IAAwB,CAA3C,CAAX;IAEAxB,KAAK,CAAC2B,QAAN,CAAeF,QAAf,EAAyBH,QAAzB;EACH;;EAED,oBACI;IAEI,EAAE,EAAE,UAAUpB,KAAV,GAAkB,OAF1B;IAGI,SAAS,EAAEC,SAHf;IAII,aAAa,EAAEM,iBAJnB;IAKI,WAAW,EAAEE,eALjB;IAMI,SAAS,EAAES,aANf;IAOI,UAAU,EAAEH,cAPhB;IAQI,WAAW,EAAEE,eARjB;IASI,MAAM,EAAEE,UATZ;IAUI,SAAS,EAAE,IAVf;IAAA,WAYKnB,KAAK,GAAG,CAZb,OAYiB,GAZjB,eAaI;MACI,EAAE,EAAE,UAAUA,KAAV,GAAkB,OAD1B;MAEI,SAAS,EAAC,WAFd;MAGI,IAAI,EAAE,qCAAqCD,IAAI,CAAC2B,SAHpD;MAAA,WAIK3B,IAAI,CAAC4B,KAJV,UAIqB5B,IAAI,CAAC6B,MAJ1B;IAAA;MAAA;MAAA;MAAA;IAAA,QAbJ,eAmBI;MACI,IAAI,EAAC,QADT;MAEI,EAAE,EAAE,iBAAiB5B,KAFzB;MAGI,SAAS,EAAC,kBAHd;MAII,OAAO,EAAEK,gBAJb;MAKI,KAAK,EAAE;IALX;MAAA;MAAA;MAAA;IAAA,QAnBJ;EAAA,GACSL,KADT;IAAA;IAAA;IAAA;EAAA,QADJ;AA6BH;;GAhFQJ,Q;;KAAAA,Q;AAkFT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}