{"ast":null,"code":"var _jsxFileName = \"/Users/michelle/Projects/Playlister_HW3/client/src/components/PlaylistCards.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SongCard from './SongCard.js';\nimport { GlobalStoreContext } from '../store';\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaylistCards() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  store.history = useHistory();\n\n  if (store.currentList === null) {\n    store.history.push(\"/\");\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"playlist-cards\",\n    children: store.currentList.songs.map((song, index) => /*#__PURE__*/_jsxDEV(SongCard, {\n      id: 'playlist-song-' + index,\n      index: index,\n      song: song\n    }, 'playlist-song-' + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlaylistCards, \"4OxDS/MBxgihbUmN8AlIaPl6MU0=\", false, function () {\n  return [useHistory];\n});\n\n_c = PlaylistCards;\nexport default PlaylistCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistCards\");","map":{"version":3,"names":["useContext","useHistory","SongCard","GlobalStoreContext","PlaylistCards","store","history","currentList","push","songs","map","song","index"],"sources":["/Users/michelle/Projects/Playlister_HW3/client/src/components/PlaylistCards.js"],"sourcesContent":["import { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport SongCard from './SongCard.js'\nimport { GlobalStoreContext } from '../store'\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nfunction PlaylistCards() {\n    const { store } = useContext(GlobalStoreContext);\n    store.history = useHistory();\n    if (store.currentList === null) {\n        store.history.push(\"/\");\n        return null;\n    }\n\n    return (\n        <div id=\"playlist-cards\">\n        {\n            store.currentList.songs.map((song, index) => (\n                <SongCard\n                    id={'playlist-song-' + (index)}\n                    key={'playlist-song-' + (index)}\n                    index={index}\n                    song={song}\n                />\n            ))\n        }\n        </div>\n    )\n}\n\nexport default PlaylistCards;"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,aAAT,GAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAYL,UAAU,CAACG,kBAAD,CAA5B;EACAE,KAAK,CAACC,OAAN,GAAgBL,UAAU,EAA1B;;EACA,IAAII,KAAK,CAACE,WAAN,KAAsB,IAA1B,EAAgC;IAC5BF,KAAK,CAACC,OAAN,CAAcE,IAAd,CAAmB,GAAnB;IACA,OAAO,IAAP;EACH;;EAED,oBACI;IAAK,EAAE,EAAC,gBAAR;IAAA,UAEIH,KAAK,CAACE,WAAN,CAAkBE,KAAlB,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,kBACxB,QAAC,QAAD;MACI,EAAE,EAAE,mBAAoBA,KAD5B;MAGI,KAAK,EAAEA,KAHX;MAII,IAAI,EAAED;IAJV,GAES,mBAAoBC,KAF7B;MAAA;MAAA;MAAA;IAAA,QADJ;EAFJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GAtBQR,a;UAEWH,U;;;KAFXG,a;AAwBT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}