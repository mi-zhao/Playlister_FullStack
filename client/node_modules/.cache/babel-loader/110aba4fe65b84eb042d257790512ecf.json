{"ast":null,"code":"/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n// GENERATES HTTP REQUESTS\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/api'\n}); // THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const getAllPlaylists = () => api.get(`/playlists`);\nexport const getPlaylistPairs = () => api.get('playlistpairs');\nexport const getPlaylistById = id => api.get(`/playlist/${id}`); // GET request: gets a resource\n\nexport const createPlaylist = playlist => api.post(`/playlist/`, playlist); // POST request: creates a resource\n\nexport const updatePlaylistById = (id, playlist) => api.put(`/playlist/${id}`, playlist); // PUT request: creates or replaces a resource\n\nexport const deletePlaylistById = id => api.delete(`/playlist/${id}`);\nconst apis = {\n  getAllPlaylists,\n  getPlaylistPairs,\n  getPlaylistById,\n  createPlaylist,\n  updatePlaylistById\n};\nexport default apis;","map":{"version":3,"names":["axios","api","create","baseURL","getAllPlaylists","get","getPlaylistPairs","getPlaylistById","id","createPlaylist","playlist","post","updatePlaylistById","put","deletePlaylistById","delete","apis"],"sources":["/Users/michelle/Projects/Playlister_HW3/client/src/api/index.js"],"sourcesContent":["/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\n// GENERATES HTTP REQUESTS\nimport axios from 'axios'\nconst api = axios.create({\n    baseURL: 'http://localhost:4000/api',\n})\n\n// THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\nexport const getAllPlaylists = () => api.get(`/playlists`)\nexport const getPlaylistPairs = () => api.get('playlistpairs')\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`)                           // GET request: gets a resource\nexport const createPlaylist = (playlist) => api.post(`/playlist/`, playlist)                // POST request: creates a resource\nexport const updatePlaylistById = (id, playlist) => api.put(`/playlist/${id}`, playlist)    // PUT request: creates or replaces a resource\nexport const deletePlaylistById = (id) => api.delete(`/playlist/${id}`)\n\nconst apis = {\n    getAllPlaylists,\n    getPlaylistPairs,\n    getPlaylistById,\n    createPlaylist,\n    updatePlaylistById,\n}\n\nexport default apis\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EACrBC,OAAO,EAAE;AADY,CAAb,CAAZ,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAS,YAAT,CAA9B;AACP,OAAO,MAAMC,gBAAgB,GAAG,MAAML,GAAG,CAACI,GAAJ,CAAQ,eAAR,CAA/B;AACP,OAAO,MAAME,eAAe,GAAIC,EAAD,IAAQP,GAAG,CAACI,GAAJ,CAAS,aAAYG,EAAG,EAAxB,CAAhC,C,CAAqF;;AAC5F,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAcT,GAAG,CAACU,IAAJ,CAAU,YAAV,EAAuBD,QAAvB,CAArC,C,CAAqF;;AAC5F,OAAO,MAAME,kBAAkB,GAAG,CAACJ,EAAD,EAAKE,QAAL,KAAkBT,GAAG,CAACY,GAAJ,CAAS,aAAYL,EAAG,EAAxB,EAA2BE,QAA3B,CAA7C,C,CAAqF;;AAC5F,OAAO,MAAMI,kBAAkB,GAAIN,EAAD,IAAQP,GAAG,CAACc,MAAJ,CAAY,aAAYP,EAAG,EAA3B,CAAnC;AAEP,MAAMQ,IAAI,GAAG;EACTZ,eADS;EAETE,gBAFS;EAGTC,eAHS;EAITE,cAJS;EAKTG;AALS,CAAb;AAQA,eAAeI,IAAf"},"metadata":{},"sourceType":"module"}