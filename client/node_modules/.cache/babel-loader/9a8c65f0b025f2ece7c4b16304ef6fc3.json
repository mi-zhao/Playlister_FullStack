{"ast":null,"code":"var _jsxFileName = \"/Users/michelle/Projects/Playlister_HW3/client/src/components/PlaylistCards.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport SongCard from './SongCard.js';\nimport { GlobalStoreContext } from '../store';\nimport DeleteSongModal from './DeleteSongModal.js';\nimport EditSongModal from './EditSongModal.js';\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlaylistCards() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  store.history = useHistory();\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyPress);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [handleKeyPress]);\n\n  function handleKeyPress(event) {\n    if (event.ctrlKey || event.metaKey) {\n      if (event.key === 'z') {\n        store.undo();\n        console.log(\"undoo!\");\n      } else if (event.key === 'y') {\n        store.redo();\n        console.log(\"redoo!\");\n      }\n    }\n  }\n\n  if (store.currentList === null) {\n    store.history.push(\"/\");\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"playlist-cards\",\n    children: [store.currentList.songs.map((song, index) => /*#__PURE__*/_jsxDEV(SongCard, {\n      id: 'playlist-song-' + index,\n      index: index,\n      song: song\n    }, 'playlist-song-' + index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(DeleteSongModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EditSongModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlaylistCards, \"7Lmb/zrMnln834isycHUB1Km/4E=\", false, function () {\n  return [useHistory];\n});\n\n_c = PlaylistCards;\nexport default PlaylistCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistCards\");","map":{"version":3,"names":["useContext","useEffect","useHistory","SongCard","GlobalStoreContext","DeleteSongModal","EditSongModal","PlaylistCards","store","history","document","addEventListener","handleKeyPress","removeEventListener","event","ctrlKey","metaKey","key","undo","console","log","redo","currentList","push","songs","map","song","index"],"sources":["/Users/michelle/Projects/Playlister_HW3/client/src/components/PlaylistCards.js"],"sourcesContent":["import { useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport SongCard from './SongCard.js'\nimport { GlobalStoreContext } from '../store'\nimport DeleteSongModal from './DeleteSongModal.js';\nimport EditSongModal from './EditSongModal.js';\n/*\n    This React component lets us edit a loaded list, which only\n    happens when we are on the proper route.\n    \n    @author McKilla Gorilla\n*/\nfunction PlaylistCards() {\n    const { store } = useContext(GlobalStoreContext);\n    store.history = useHistory();\n\n    useEffect( () => {\n        document.addEventListener('keydown', handleKeyPress);\n        return () => {\n            document.removeEventListener(('keydown'), handleKeyPress);\n        };\n    }, [handleKeyPress]);\n\n    function handleKeyPress(event) {\n        if (event.ctrlKey || event.metaKey) {\n            if (event.key === 'z') {\n                store.undo();\n                console.log(\"undoo!\");\n            }\n            else if (event.key === 'y') {\n                store.redo();\n                console.log(\"redoo!\");\n            }\n        }\n    }\n\n    if (store.currentList === null) {\n        store.history.push(\"/\");\n        return null;\n    }\n\n    return (\n        <div id=\"playlist-cards\">\n        {\n            store.currentList.songs.map((song, index) => (\n                <SongCard\n                    id={'playlist-song-' + (index)}\n                    key={'playlist-song-' + (index)}\n                    index={index}\n                    song={song}\n                />\n            ))\n        }\n        <DeleteSongModal/>  \n        <EditSongModal/>\n        </div>\n    )\n}\n\nexport default PlaylistCards;"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,aAAT,GAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAYR,UAAU,CAACI,kBAAD,CAA5B;EACAI,KAAK,CAACC,OAAN,GAAgBP,UAAU,EAA1B;EAEAD,SAAS,CAAE,MAAM;IACbS,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,cAArC;IACA,OAAO,MAAM;MACTF,QAAQ,CAACG,mBAAT,CAA8B,SAA9B,EAA0CD,cAA1C;IACH,CAFD;EAGH,CALQ,EAKN,CAACA,cAAD,CALM,CAAT;;EAOA,SAASA,cAAT,CAAwBE,KAAxB,EAA+B;IAC3B,IAAIA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,OAA3B,EAAoC;MAChC,IAAIF,KAAK,CAACG,GAAN,KAAc,GAAlB,EAAuB;QACnBT,KAAK,CAACU,IAAN;QACAC,OAAO,CAACC,GAAR,CAAY,QAAZ;MACH,CAHD,MAIK,IAAIN,KAAK,CAACG,GAAN,KAAc,GAAlB,EAAuB;QACxBT,KAAK,CAACa,IAAN;QACAF,OAAO,CAACC,GAAR,CAAY,QAAZ;MACH;IACJ;EACJ;;EAED,IAAIZ,KAAK,CAACc,WAAN,KAAsB,IAA1B,EAAgC;IAC5Bd,KAAK,CAACC,OAAN,CAAcc,IAAd,CAAmB,GAAnB;IACA,OAAO,IAAP;EACH;;EAED,oBACI;IAAK,EAAE,EAAC,gBAAR;IAAA,WAEIf,KAAK,CAACc,WAAN,CAAkBE,KAAlB,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,kBACxB,QAAC,QAAD;MACI,EAAE,EAAE,mBAAoBA,KAD5B;MAGI,KAAK,EAAEA,KAHX;MAII,IAAI,EAAED;IAJV,GAES,mBAAoBC,KAF7B;MAAA;MAAA;MAAA;IAAA,QADJ,CAFJ,eAWA,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QAXA,eAYA,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QAZA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH;;GA7CQpB,a;UAEWL,U;;;KAFXK,a;AA+CT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}